<rdf:RDF
    xmlns:kansei="http://geni-orca.renci.org/owl/kansei.owl#"
    xmlns:compute="http://geni-orca.renci.org/owl/compute.owl#"
    xmlns:app-color="http://geni-orca.renci.org/owl/app-color.owl#"
    xmlns:ethernet="http://geni-orca.renci.org/owl/ethernet.owl#"
    xmlns:dtn="http://geni-orca.renci.org/owl/dtn.owl#"
    xmlns:time="http://www.w3.org/2006/time#"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:openflow="http://geni-orca.renci.org/owl/openflow.owl#"
    xmlns:modify-schema="http://geni-orca.renci.org/owl/modify.owl#"
    xmlns:planetlab="http://geni-orca.renci.org/owl/planetlab.owl#"
    xmlns:geni="http://geni-orca.renci.org/owl/geni.owl#"
    xmlns:layer="http://geni-orca.renci.org/owl/layer.owl#"
    xmlns:request-schema="http://geni-orca.renci.org/owl/request.owl#"
    xmlns:ip4="http://geni-orca.renci.org/owl/ip4.owl#"
    xmlns:orca="http://geni-orca.renci.org/owl/orca.owl#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xmlns:request="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#"
    xmlns:eucalyptus="http://geni-orca.renci.org/owl/eucalyptus.owl#"
    xmlns:domain="http://geni-orca.renci.org/owl/domain.owl#"
    xmlns:collections="http://geni-orca.renci.org/owl/collections.owl#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
    xmlns:ec2="http://geni-orca.renci.org/owl/ec2.owl#"
    xmlns:topology="http://geni-orca.renci.org/owl/topology.owl#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" > 
  <rdf:Description rdf:about="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#VLAN0-master-ip-172-16-1-1">
    <ip4:netmask>255.255.255.0</ip4:netmask>
    <layer:label_ID>172.16.1.1</layer:label_ID>
    <rdf:type rdf:resource="http://geni-orca.renci.org/owl/ip4.owl#IPAddress"/>
  </rdf:Description>
  <rdf:Description rdf:about="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#">
    <collections:element rdf:resource="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#VLAN0"/>
    <collections:element rdf:resource="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#master"/>
    <collections:element rdf:resource="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#workers"/>
    <request-schema:hasTerm rdf:resource="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#Term"/>
    <rdf:type rdf:resource="http://geni-orca.renci.org/owl/request.owl#Reservation"/>
  </rdf:Description>
  <rdf:Description rdf:about="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#VLAN0-master">
    <ip4:localIPAddress rdf:resource="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#VLAN0-master-ip-172-16-1-1"/>
    <rdf:type rdf:resource="http://geni-orca.renci.org/owl/topology.owl#Interface"/>
  </rdf:Description>
  <rdf:Description rdf:about="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#master">
    <topology:hasInterface rdf:resource="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#VLAN0-master"/>
    <request-schema:postBootScript rdf:datatype="http://www.w3.org/2001/XMLSchema#string">#!/usr/bin/env bash

# host setup
cat &gt;/etc/hosts &lt;&lt;EOF
172.16.1.1  master.expnet   master   salt
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
EOF

hostname master

for i in {100..200}; do
   name=$(($i - 100))
   echo 172.16.1.$i  condor-w$name condor-w$name\.expnet &gt;&gt; /etc/hosts
done

# condor setup
service condor stop
cat &gt; /etc/condor/condor_config.local &lt;&lt; EOF
SLOT_TYPE_1 = cpus=100%, ram=100%, swap=25%, disk=75%
NUM_SLOTS_TYPE_1 = 1
EOF

cat &gt;&gt;  /etc/condor/config.d/10-common.conf &lt;&lt; EOF
UID_DOMAIN = expnet
TRUST_UID_DOMAIN = True
SOFT_UID_DOMAIN = True
EOF

cat &gt;  /etc/condor/config.d/90-master &lt;&lt; EOF
DAEMON_LIST = COLLECTOR, MASTER, NEGOTIATOR, SCHEDD
CONDOR_HOST = master.expnet
ALLOW_WRITE = *
HOSTALLOW_READ = *
HOSTALLOW_WRITE = *
EOF
 
service condor restart

# NFS server setup
mkdir -p /mnt/scratch
chown -R pegasus-user:pegasus-user /mnt/scratch

yum -y install nfs-utils nfs-utils-lib
cat &gt;&gt; /etc/exports &lt;&lt; EOF
/mnt/scratch *(rw,sync,no_root_squash,no_subtree_check)
EOF
exportfs -a
/etc/init.d/rpcbind start
/etc/init.d/nfs start

# workflow setup

sed -i 's/local/condorpool/g' /home/pegasus-user/20131031/montage/workflow/cache.list
cat &gt;&gt; /home/pegasus-user/20131031/montage/pegasusrc &lt;&lt; EOF
pegasus.transfer.link = true
pegasus.transfer.bypass.input.staging = true
pegasus.data.configuration=nonsharedfs
EOF

cat &gt; /home/pegasus-user/20131031/montage/submit &lt;&lt;EOF
#!/bin/bash

set -e

MONTAGE_HOME=\$(pwd)
TOP_DIR=\$(pwd)
HOSTNAME=\$(/bin/hostname -f)
DATA_CONFIG="condorio" 
STAGING_SITE="local"
PROTOCOL="file"

# unique directory for this run
RUN_DIR=\$TOP_DIR

cd \$RUN_DIR
cp \$TOP_DIR/workflow/dag.xml .
for BINARY in \$(cd \$MONTAGE_HOME/bin &amp;&amp; ls); do
    name=\$BINARY:3.3
    if [ "\${BINARY}" = "mFitplane" ] || [ "\$BINARY" = "mDiff" ]; then
	name=\$BINARY
    fi
cat &gt;&gt;tc &lt;&lt;END
tr \$name {
    site condorpool {
        pfn "\$MONTAGE_HOME/bin/\$BINARY"
        arch "x86_64"
        os "linux"
        type "STAGEABLE"
        profile pegasus "clusters.num" "5"
        profile env "MONTAGE_BIN" "."
    }
}
END
  
done
cat &gt; sites.xml &lt;&lt;END
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;sitecatalog xmlns="http://pegasus.isi.edu/schema/sitecatalog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pegasus.isi.edu/schema/sitecatalog http://pegasus.isi.edu/schema/sc-3.0.xsd" version="3.0"&gt;
    &lt;site handle="local" arch="x86_64" os="LINUX"&gt;
        &lt;grid  type="gt2" contact="localhost/jobmanager-fork" scheduler="Fork" jobtype="auxillary"/&gt;
        &lt;head-fs&gt;
            &lt;scratch&gt;
                &lt;shared&gt;
                    &lt;file-server protocol="file" url="file://" mount-point="/mnt/scratch"/&gt;
                    &lt;internal-mount-point mount-point="/mnt/scratch"/&gt;
                &lt;/shared&gt;
            &lt;/scratch&gt;
            &lt;storage&gt;
                &lt;shared&gt;
                    &lt;file-server protocol="file" url="file://" mount-point="/mnt/scratch/outputs"/&gt;
                    &lt;internal-mount-point mount-point="/mnt/scratch/outputs"/&gt;
                &lt;/shared&gt;
            &lt;/storage&gt;
        &lt;/head-fs&gt;
        &lt;profile namespace="env" key="MONTAGE_HOME" &gt;\$MONTAGE_HOME&lt;/profile&gt;
        &lt;profile namespace="env" key="PEGASUS_HOME" &gt;/usr&lt;/profile&gt;
        &lt;profile namespace="env" key="SSH_PRIVATE_KEY" &gt;\$HOME/creds/wf_key&lt;/profile&gt;
    &lt;/site&gt;
    &lt;site handle="condorpool" arch="x86_64" os="LINUX"&gt;
        &lt;head-fs&gt;
	    &lt;scratch&gt;
                &lt;shared&gt;
                    &lt;file-server protocol="file" url="file://" mount-point="/mnt/scratch"/&gt;
                    &lt;internal-mount-point mount-point="/mnt/scratch"/&gt;
                &lt;/shared&gt;
            &lt;/scratch&gt;
            &lt;storage /&gt;
        &lt;/head-fs&gt;
        &lt;profile namespace="pegasus" key="style"&gt;condor&lt;/profile&gt;
        &lt;profile namespace="condor" key="universe"&gt;vanilla&lt;/profile&gt;
        &lt;profile namespace="condor" key="requirements" &gt;(Target.Arch == "X86_64")&lt;/profile&gt;
        &lt;profile namespace="env" key="PEGASUS_BIN_DIR" &gt;/usr/bin&lt;/profile&gt;
    &lt;/site&gt;
&lt;/sitecatalog&gt;
END

cp \$TOP_DIR/workflow/cache.list .

perl -pi.bak -e "s{\@\@REPLACE_HERE\@\@}{\$TOP_DIR}g" cache.list

pegasus-plan \
    --conf pegasusrc \
    --sites condorpool \
    --staging-site condorpool \
    --output-site local \
    --dax dag.xml \
    --cluster horizontal \
    --submit

EOF

# monitor setup
yum -y install python-pip python-devel git
pip install pika tornado psutil argparse
git clone https://github.com/dcvan/cluster15_ensemble.git ~/cluster

# start monitor
python /root/cluster/performance-monitor/producer/check_pegasus.py -i {{param['exp_id']}} -m -d /home/pegasus-user/20131031/montage/pegasus-user/pegasus/montage -r {{param['run_num']}} &amp;


while [ "$(condor_status -total | grep -E 'Total[ \t]+[0-9]'|awk '{print $2}')" != "{{param['worker_num']}}" ];do
	sleep 5
done 

# start workflow
sleep 10
for (( i = 0; i &lt; {{param['run_num']}}; i ++ ))
do
	su pegasus-user -c 'cd /home/pegasus-user/20131031/montage/; bash submit'
	sleep 2
done


</request-schema:postBootScript>
    <request-schema:inDomain rdf:resource="http://geni-orca.renci.org/owl/{{param['worker_site']}}vmsite.rdf#{{param['worker_site']}}vmsite/Domain"/>
    <compute:diskImage rdf:resource="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#montage.v2.0.7a"/>
    <compute:specificCE rdf:resource="http://geni-orca.renci.org/owl/exogeni.owl#XOMedium"/>
    <domain:hasResourceType rdf:resource="http://geni-orca.renci.org/owl/compute.owl#VM"/>
    <rdf:type rdf:resource="http://geni-orca.renci.org/owl/compute.owl#ComputeElement"/>
  </rdf:Description>
  <rdf:Description rdf:about="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#montage.v2.0.7a">
    <topology:hasURL>http://geni-images.renci.org/images/pruth/ADAMANT/montage.v2.0.7a.xml</topology:hasURL>
    <topology:hasGUID>f140b31d8257282f08714b6bc94b03abc8a74859</topology:hasGUID>
    <rdf:type rdf:resource="http://geni-orca.renci.org/owl/compute.owl#DiskImage"/>
  {% if param['topology'] == 'inter-rack' %}
  <rdf:Description rdf:about="http://geni-orca.renci.org/owl/{{param['worker_site']}}vmsite.rdf#param['worker_site']vmsite/Domain">
    <rdf:type rdf:resource="http://geni-orca.renci.org/owl/topology.owl#NetworkDomain"/>
  </rdf:Description>
  {% endif %}
  </rdf:Description>
  <rdf:Description rdf:about="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#VLAN0-workers-ip-172-16-1-100">
    <ip4:netmask>255.255.0.0</ip4:netmask>
    <layer:label_ID>172.16.1.100</layer:label_ID>
    <rdf:type rdf:resource="http://geni-orca.renci.org/owl/ip4.owl#IPAddress"/>
  </rdf:Description>
  <rdf:Description rdf:about="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#TermDuration">
    <time:days rdf:datatype="http://www.w3.org/2001/XMLSchema#decimal">{{param['reservation']}}</time:days>
    <rdf:type rdf:resource="http://www.w3.org/2006/time#DurationDescription"/>
  </rdf:Description>
  <rdf:Description rdf:about="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#VLAN0-workers">
    <ip4:localIPAddress rdf:resource="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#VLAN0-workers-ip-172-16-1-100"/>
    <rdf:type rdf:resource="http://geni-orca.renci.org/owl/topology.owl#Interface"/>
  </rdf:Description>
  <rdf:Description rdf:about="http://geni-orca.renci.org/owl/rcivmsite.rdf#rcivmsite/Domain">
    <rdf:type rdf:resource="http://geni-orca.renci.org/owl/topology.owl#NetworkDomain"/>
  </rdf:Description>
  <rdf:Description rdf:about="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#VLAN0">
    <topology:hasInterface rdf:resource="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#VLAN0-workers"/>
    <topology:hasInterface rdf:resource="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#VLAN0-master"/>
    <layer:atLayer rdf:resource="http://geni-orca.renci.org/owl/ethernet.owl#EthernetNetworkElement"/>
    <layer:bandwidth rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">{{param['bandwidth']}}</layer:bandwidth>
    <rdf:type rdf:resource="http://geni-orca.renci.org/owl/topology.owl#BroadcastConnection"/>
  </rdf:Description>
  <rdf:Description rdf:about="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#workers">
    <topology:hasInterface rdf:resource="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#VLAN0-workers"/>
    <request-schema:postBootScript rdf:datatype="http://www.w3.org/2001/XMLSchema#string">#!/bin/bash

function testSSH() {
        local user=${1}
        local host=${2}
        local timeout=${3}
        
        SSH_OPTS="-q -o PreferredAuthentications=publickey -o HostbasedAuthentication=no -o PasswordAuthentication=no -o StrictHostKeyChecking=no"
        
        ssh -q -q $SSH_OPTS -o "BatchMode=yes" -o "ConnectTimeout ${timeout}"  ${user}@${host} "echo 2&gt;&amp;1" &amp;&amp; return 0 || return 1
}

# host setup
while [ ! "$(ifconfig eth1|grep 'inet addr'|cut -d':' -f2|awk '{print $1}'|cut -d'.' -f4)" ];do
    sleep 10
done

ip_end=$(ifconfig eth1|grep 'inet addr'|cut -d':' -f2|awk '{print $1}'|cut -d'.' -f4)

MASTER=172.16.1.1

# replace /etc/hosts
cat &gt;/etc/hosts &lt;&lt;EOF
$MASTER   master.expnet   master   salt
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
EOF

for i in {100..200}; do
   name=$(($i-100))
   echo 172.16.1.$i  condor-w$name\.expnet condor-w$name &gt;&gt; /etc/hosts
done

name=$(($ip_end-100))
MY_HOSTNAME=condor-w$name
hostname $MY_HOSTNAME

# condor setup
service condor stop	
cat &gt; /etc/condor/condor_config.local &lt;&lt; EOF
SLOT_TYPE_1 = cpus=100%, ram=100%, swap=25%, disk=75%
NUM_SLOTS_TYPE_1 = 1
EOF

cat &gt;&gt;  /etc/condor/config.d/10-common.conf &lt;&lt; EOF
UID_DOMAIN = expnet
TRUST_UID_DOMAIN = True
SOFT_UID_DOMAIN = True
EOF

cat &gt;  /etc/condor/config.d/90-worker &lt;&lt; EOF
DAEMON_LIST = MASTER, STARTD, SCHEDD
CONDOR_HOST = master.expnet
ALLOW_WRITE = *
HOSTALLOW_READ = *
HOSTALLOW_WRITE = *
EOF

# wait until the master is pingable
UNPINGABLE=true
for ((i=0;i&lt;60;i+=1));
do
      echo "testing ping, try: $i " &gt;&gt; /tmp/bootscript.out
      PING=`ping -c 3 master &gt; /dev/null 2&gt;&amp;1`
      if [ "$?" = "0" ]; then
           UNPINGABLE=false
           break
       fi
       sleep 10
done

service condor restart
sleep 20

ATTEMPT=0
while [ ! "$(condor_status | grep $MY_HOSTNAME)" ];do
    if [ "$ATTEMPT" -gt 3 ];then
        ATTEMPT=0
        service condor restart
    else
        ATTEMPT=$(($ATTEMPT + 1))
    fi
    sleep 10
done

# NFS setup
mkdir -p /mnt/scratch
chown -R pegasus-user:pegasus-user /mnt/scratch
yum -y install nfs-utils nfs-utils-lib
cat &gt;&gt; /etc/fstab &lt;&lt; EOF
$MASTER:/mnt/scratch       /mnt/scratch    nfs     vers=3,proto=tcp,hard,nolock,intr,timeo=600,retrans=2,wsize=32768,rsize=32768   0       0
EOF
mount -a -t nfs

while [ "$?" -gt 0 ];do
    sleep 10s
    mount -a -t nfs
done

# monitor setup
yum -y install python-pip python-devel git
pip install pika tornado psutil argparse
git clone https://github.com/dcvan/cluster15_ensemble.git ~/cluster

# start monitor
python /root/cluster/performance-monitor/producer/check_pegasus.py -i {{param['exp_id']}} -w -l {{' '.join(param['executables'])}}

</request-schema:postBootScript>
    <request-schema:inDomain rdf:resource="http://geni-orca.renci.org/owl/{{param['master_site']}}vmsite.rdf#{{param['master_site']}}vmsite/Domain"/>
    <compute:diskImage rdf:resource="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#montage.v2.0.7a"/>
    <compute:specificCE rdf:resource="http://geni-orca.renci.org/owl/exogeni.owl#{{param['worker_size']}}"/>
    <domain:hasResourceType rdf:resource="http://geni-orca.renci.org/owl/compute.owl#{{param['resource_type']}}"/>
    <layer:numCE rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">{{param['worker_num']}}</layer:numCE>
    <request-schema:groupName>workers</request-schema:groupName>
    <rdf:type rdf:resource="http://geni-orca.renci.org/owl/compute.owl#ServerCloud"/>
  </rdf:Description>
  <rdf:Description rdf:about="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#Term">
    <time:hasDurationDescription rdf:resource="http://geni-orca.renci.org/owl/2c38e58e-eba2-43a6-b294-9f072472f967#TermDuration"/>
    <rdf:type rdf:resource="http://www.w3.org/2006/time#Interval"/>
  </rdf:Description>
</rdf:RDF>
